{"ast":null,"code":"var _jsxFileName = \"/Users/zinamohamed/alchemy/lab-13-todo/src/components/PrivateRoute.js\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRoute = ({\n  render: Component,\n  ...rest\n}) => {\n  return (\n    /*#__PURE__*/\n    // Show the component only when the user is logged in\n    // Otherwise, redirect the user to /signin page\n    _jsxDEV(Route, { ...rest,\n      render: props => rest.token ? /*#__PURE__*/_jsxDEV(Component, { ...props,\n        ...rest\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 38\n      }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 75\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n_c = PrivateRoute;\nexport default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["/Users/zinamohamed/alchemy/lab-13-todo/src/components/PrivateRoute.js"],"names":["React","Route","Redirect","PrivateRoute","render","Component","rest","props","token"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,MAAM,EAAEC,SAAV;AAAqB,KAAGC;AAAxB,CAAD,KAAoC;AACvD;AAAA;AACE;AACA;AACA,YAAC,KAAD,OACMA,IADN;AAEE,MAAA,MAAM,EAAEC,KAAK,IAAKD,IAAI,CAACE,KAAL,gBAAa,QAAC,SAAD,OAAeD,KAAf;AAAA,WAA0BD;AAA1B;AAAA;AAAA;AAAA;AAAA,cAAb,gBAAkD,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAFtE;AAAA;AAAA;AAAA;AAAA;AAHF;AAQD,CATD;;KAAMH,Y;AAWN,eAAeA,YAAf","sourcesContent":["import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\n\nconst PrivateRoute = ({ render: Component, ...rest }) => {\n  return (\n    // Show the component only when the user is logged in\n    // Otherwise, redirect the user to /signin page\n    <Route\n      {...rest}\n      render={props => (rest.token ? <Component {...props} {...rest} /> : <Redirect to=\"/login\" />)}\n    />\n  )\n}\n\nexport default PrivateRoute"]},"metadata":{},"sourceType":"module"}