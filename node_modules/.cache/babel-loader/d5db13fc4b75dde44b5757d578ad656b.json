{"ast":null,"code":"export const USER = 'USER'; // this function will give us a user object\n\nexport function getUserFromLocalStorage() {\n  const user = localStorage.getItem(USER); // if there is a user in local storage, that's the user this function will return\n\n  if (user && user.token) return JSON.parse(user); // otherwise, it'll just give us a blank, fake user object.\n\n  return {\n    email: '',\n    id: '',\n    token: ''\n  };\n}\nexport function putUserInLocalStorage(user) {\n  localStorage.setItem(USER, JSON.stringify(user));\n}","map":{"version":3,"sources":["/Users/zinamohamed/alchemy/lab-13-todo/src/Utils/local-storage-utils.js"],"names":["USER","getUserFromLocalStorage","user","localStorage","getItem","token","JSON","parse","email","id","putUserInLocalStorage","setItem","stringify"],"mappings":"AAAA,OAAO,MAAMA,IAAI,GAAG,MAAb,C,CAEP;;AACA,OAAO,SAASC,uBAAT,GAAmC;AACtC,QAAMC,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqBJ,IAArB,CAAb,CADsC,CAGtC;;AACA,MAAIE,IAAI,IAAIA,IAAI,CAACG,KAAjB,EAAwB,OAAOC,IAAI,CAACC,KAAL,CAAWL,IAAX,CAAP,CAJc,CAMtC;;AACA,SAAO;AACHM,IAAAA,KAAK,EAAE,EADJ;AAEHC,IAAAA,EAAE,EAAE,EAFD;AAGHJ,IAAAA,KAAK,EAAE;AAHJ,GAAP;AAKH;AAED,OAAO,SAASK,qBAAT,CAA+BR,IAA/B,EAAqC;AACxCC,EAAAA,YAAY,CAACQ,OAAb,CAAqBX,IAArB,EAA2BM,IAAI,CAACM,SAAL,CAAeV,IAAf,CAA3B;AACH","sourcesContent":["export const USER = 'USER';\n\n// this function will give us a user object\nexport function getUserFromLocalStorage() {\n    const user = localStorage.getItem(USER);\n    \n    // if there is a user in local storage, that's the user this function will return\n    if (user && user.token) return JSON.parse(user);\n\n    // otherwise, it'll just give us a blank, fake user object.\n    return {\n        email: '',\n        id: '',\n        token: ''\n    }\n}\n\nexport function putUserInLocalStorage(user) {\n    localStorage.setItem(USER, JSON.stringify(user));\n}"]},"metadata":{},"sourceType":"module"}